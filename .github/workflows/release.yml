name: Create Release

on: workflow_dispatch

env:
  BRANCH_NAME: ${{ github.ref_name }}
  GH_TOKEN: ${{ secrets.GH_AUTH_TOKEN }}

jobs:
  run-build-on-bitrise:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Git Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'
          token: ${{ env.GH_TOKEN }}

      - name: Check if branch is release
        run: |
          if ! [[ ${{ env.BRANCH_NAME }} =~ ^release/.* ]]; then
            echo "Origin branch must be a release/* one"
            exit 1
          fi

      - name: Install libraries and run linters and unit tests
        run: |
          yarn install
          yarn typecheck
          yarn lint
          yarn test:unit

      - name: Setup Git
        run: |
          git config --global user.name "h-bot-mobile"
          git config --global user.email "116092959+h-bot-mobile@users.noreply.github.com"
          git config --global --add --bool push.autoSetupRemote true

      - name: Bump version
        run: |
          # Extract version number from input string
          version=$(echo "${{ github.ref_name }}" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')

          # Split version number into three components
          major=$(echo $version | cut -d. -f1)
          minor=$(echo $version | cut -d. -f2)
          patch=$(echo $version | cut -d. -f3)

          # Determine type of bump based on version components
          if [[ $patch -gt 0 ]]; then
            bump="patch"
          elif [[ $minor -gt 0 ]]; then
            bump="minor"
          else
            bump="major"
          fi

          yarn release $bump --config .release-it.release.json --ci

          commit_hash=$(git rev-parse ${{ env.BRANCH_NAME }})
          echo "BUILD_COMMIT_HASH=$commit_hash" >> "$GITHUB_ENV"

      - name: Bitrise Build Production
        uses: ./dist6
        with:
          branch_name: ${{ env.BRANCH_NAME }}
          commit_hash: ${{ env.BUILD_COMMIT_HASH }}
